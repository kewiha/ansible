- name: install firefox (linux)
  tags: firefox
  apt: 
    name: 
      - firefox-esr
      - firefox-esr-l10n-en-ca
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_distribution == 'Debian'

- name: check firefox is not running (linux)
  tags: firefox
  block: 
    - name: get running firefox pids (linux)
      shell:
        cmd: pgrep firefox
      register: firefox_pids
      changed_when: false
      failed_when: firefox_pids.rc > 1
        #needed because pgrep return code is 1 if no pids are returned
    - name: check if pid list is empty
      fail:
        msg: firefox is running, stop it
      when: (firefox_pids.stdout | length > 0)


- name: set firefox policy (linux)
  tags: firefox
  block: 
    - name: create policies folder
      file: 
        path: /usr/lib/firefox-esr/distribution
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy policies.json
      template:
        src: policies.json.j2
        dest: /usr/lib/firefox-esr/distribution/policies.json
        mode: 0755
        owner: root
        group: root

- name: configure firefox (linux)
  tags: firefox
  become: true
  become_user: keith
  when: ansible_distribution == 'Debian'
  block:
  - name: check firefox profile exists (linux)
    stat:
      path: /home/keith/.mozilla/firefox/ansible
    register: firefox_profile_exists_linux
  - name: make new firefox profile (linux)
    shell: 
      cmd: |
        /usr/bin/firefox --headless --createprofile "ansible /home/keith/.mozilla/firefox/ansible"
    when: not firefox_profile_exists_linux.stat.exists
  - name: set default firefox profile (linux)
    block:
      - name: remove default profile line (linux)
        lineinfile: 
          path: /home/keith/.mozilla/firefox/profiles.ini
          regexp: 'Default=1'
          line: Default=1
          state: absent
      - name: add default profile line (linux)
        lineinfile:
          path: /home/keith/.mozilla/firefox/profiles.ini
          insertafter: |
            '[Install.*]'
          regexp: 'Default=.*'
          line: |
            Default=ansible
          state: present
  - name: copy floccus file to profile
    copy:
      src: "{{ floccus_export_path }}"    
      dest: /home/keith/.mozilla/firefox/ansible
      owner: keith
      group: keith
      mode: 0700
  - name: install arkenfox user.js and updater (linux)
    block:
      - name: get arkenfox prefsCleaner (linux)
        get_url:
          dest: /home/keith/.mozilla/firefox/ansible
          force: true
          mode: 0700
          owner: keith
          group: keith
          url: |
            https://raw.githubusercontent.com/arkenfox/user.js/master/prefsCleaner.sh
        notify: run_arkenfox_unit
      - name: get arkenfox user.js (linux)
        get_url:
          dest: /home/keith/.mozilla/firefox/ansible
          force: true
          mode: 0700
          owner: keith
          group: keith
          url: |
            https://raw.githubusercontent.com/arkenfox/user.js/master/user.js
        notify: run_arkenfox_unit
        changed_when: false
          #for firefox-esr, updater enables preferences in user.js so it wil always need replacement
      - name: get arkenfox updater (linux)
        get_url:
          dest: /home/keith/.mozilla/firefox/ansible
          force: true
          mode: 0700
          owner: keith
          group: keith
          url: |
            https://raw.githubusercontent.com/arkenfox/user.js/master/updater.sh
        notify: run_arkenfox_unit
      - name: copy user-overrides.js (linux)
        template:
          src: user-overrides.js.j2
          dest: /home/keith/.mozilla/firefox/ansible/user-overrides.js
          mode: 0600
          owner: keith
          group: keith
        notify: run_arkenfox_unit
      - name: set up arkenfox service
        become: true
        become_user: root
        block:
          - name: copy arkenfox service
            template:
              src: arkenfox@.service.j2
              dest: /etc/systemd/system/arkenfox@.service
              mode: 744
              owner: root
              group: root
            notify: run_arkenfox_unit
          - name: copy arkenfox timer
            template:
              src: arkenfox@.timer.j2
              dest: /etc/systemd/system/arkenfox@.timer
              mode: 744
              owner: root
              group: root
            notify: run_arkenfox_unit
          - name: enable arkenfox timer
            systemd:
              name: arkenfox@keith.timer
              state: started
              enabled: yes

